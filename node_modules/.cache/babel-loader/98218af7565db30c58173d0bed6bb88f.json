{"ast":null,"code":"var _jsxFileName = \"D:\\\\Helena\\\\IT\\\\React\\\\ReactKurzComplete\\\\multi-page-spa\\\\multi-page-spa\\\\01-starting-project\\\\src\\\\App.js\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport Welcome from \"./pages/Welcome\";\nimport Products from \"./pages/Products\";\nimport Header from \"./components/Header\";\nimport ProductDetail from \"./pages/ProductDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/welcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/welcome/*\",\n          element: /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 45\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"new-user\",\n            element: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Welcome, new user!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/products\",\n          element: /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/products/:productId\",\n          element: /*#__PURE__*/_jsxDEV(ProductDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n/*\nNYNI BUDEME UPRGRADOVAT NA REACT-ROUTER-DOM 6.\n=> switch se meni na routes. vkladame element. nepotrebujeme exact.\n=> Link, NavLink existuji i ve verzi 6, ale neni tam activeClassName.\nPuvodni verze NavLink: <NavLink activeClassName={classes.active} to=\"/welcome\">Welcome</NavLink>\n=> useParams zustava stejne.\n=> Redirect uz neni, misto toho je Navigate.\n=> i nested Route musi byt schovana v <routes></routes>\n=> abychom mohli zobrazit welcome/new-user, coz je nested route ve welcome, musime v App pridat welcome/* a v te nested Route ve welcome upravime path na jen 'new-user'\n\n\nTakhle to bylo s react-router-dom 5:\n<main>\n        <Switch>\n          <Route path='/' exact>\n            <Redirect to='/welcome' />\n          </Route>\n          <Route path=\"/welcome\">\n            <Welcome />\n          </Route>\n          <Route path=\"/products\" exact>\n            <Products />\n          </Route>\n          <Route path=\"/products/:productId\">\n            <ProductDetail />\n          </Route>\n        </Switch>\n*/\n\n/*\nTohle je DYNAMIC ROUTE:\n<Route path='/product-detail/:productId'>\nTo, ze tam je ta dvojtecka, znamena, ze react to precte jako our-domain.com/product-detail/<any value>\n*/\n\n/* PARAMS\nV productDetail pridame useParams hook to give us a key for the product.\n*/\n\n/* SWITCH, EXACT\nSwitch nam pomuze zaridit aby byl vzdy ativni pouze jeden Route. Jinak by se nam na jedne strance zaroven nacetly products i product details.\nA ten aktivni odkaz je ten, ktery je matched first.\nProto se nam ted budou zobrazovat products ale ne uz product details. On se nemuze dostat na product details, protoze hleda prvni match. A ten najde u products.\nProto jeste pridame exact -> tzn. matchuje exact path. A my se pak muzeme dostat i na product details.\n<Switch>\n<Route>... \n</Switch>\n\n*/\n\n/* REDIRECT\nSlouzi k redirectovani uzivatele.\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Helena/IT/React/ReactKurzComplete/multi-page-spa/multi-page-spa/01-starting-project/src/App.js"],"names":["Route","Routes","Navigate","Welcome","Products","Header","ProductDetail","App"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAA,4BACE;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAAlC;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,sBAAZ;AAAmC,UAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAA5C;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;KAlBQA,G;AAoBT,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA","sourcesContent":["import { Route, Routes, Navigate } from \"react-router-dom\";\nimport Welcome from \"./pages/Welcome\";\nimport Products from \"./pages/Products\";\nimport Header from \"./components/Header\";\nimport ProductDetail from \"./pages/ProductDetail\";\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <Header />\n      </header>\n      <main>\n        <Routes>\n          <Route path=\"/\" element={<Navigate to=\"/welcome\" />} />\n          <Route path=\"/welcome/*\" element={<Welcome />}>\n            <Route path=\"new-user\" element={<p>Welcome, new user!</p>} />\n          </Route>\n          <Route path=\"/products\" element={<Products />} />\n          <Route path=\"/products/:productId\" element={<ProductDetail />} />\n        </Routes>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n/*\nNYNI BUDEME UPRGRADOVAT NA REACT-ROUTER-DOM 6.\n=> switch se meni na routes. vkladame element. nepotrebujeme exact.\n=> Link, NavLink existuji i ve verzi 6, ale neni tam activeClassName.\nPuvodni verze NavLink: <NavLink activeClassName={classes.active} to=\"/welcome\">Welcome</NavLink>\n=> useParams zustava stejne.\n=> Redirect uz neni, misto toho je Navigate.\n=> i nested Route musi byt schovana v <routes></routes>\n=> abychom mohli zobrazit welcome/new-user, coz je nested route ve welcome, musime v App pridat welcome/* a v te nested Route ve welcome upravime path na jen 'new-user'\n\n\nTakhle to bylo s react-router-dom 5:\n<main>\n        <Switch>\n          <Route path='/' exact>\n            <Redirect to='/welcome' />\n          </Route>\n          <Route path=\"/welcome\">\n            <Welcome />\n          </Route>\n          <Route path=\"/products\" exact>\n            <Products />\n          </Route>\n          <Route path=\"/products/:productId\">\n            <ProductDetail />\n          </Route>\n        </Switch>\n*/\n\n/*\nTohle je DYNAMIC ROUTE:\n<Route path='/product-detail/:productId'>\nTo, ze tam je ta dvojtecka, znamena, ze react to precte jako our-domain.com/product-detail/<any value>\n*/\n\n/* PARAMS\nV productDetail pridame useParams hook to give us a key for the product.\n*/\n\n/* SWITCH, EXACT\nSwitch nam pomuze zaridit aby byl vzdy ativni pouze jeden Route. Jinak by se nam na jedne strance zaroven nacetly products i product details.\nA ten aktivni odkaz je ten, ktery je matched first.\nProto se nam ted budou zobrazovat products ale ne uz product details. On se nemuze dostat na product details, protoze hleda prvni match. A ten najde u products.\nProto jeste pridame exact -> tzn. matchuje exact path. A my se pak muzeme dostat i na product details.\n<Switch>\n<Route>... \n</Switch>\n\n*/\n/* REDIRECT\nSlouzi k redirectovani uzivatele.\n*/\n"]},"metadata":{},"sourceType":"module"}